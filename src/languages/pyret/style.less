.blocks-language-pyret {
  // Import the default style, using the parameters set below.
  // Yes, the parameters below here really get passed into the style file imported above them.
  @import "../../less/default-style.less";
  // Set border parameters for default-style.less:
  @border-radius: 5px;
  @border-width: 2px;
  // Color parameters:
  @comment-color: #ddd;
  @comment-background-color: #444;
  @border-color: black;
  @editing-border-color: orange;
  @error-border-color: red;
  @border-hint: rgba(255, 165, 0, 0.3);
  @drag-drop-background-color: lightblue;
  @drag-replace-background-color: red;

  // Settings for _this_ file:
  @large-border-radius: 15px;
  @literal-number-color: blue;
  @literal-string-color: green;
  @literal-char-color: orange;
  @literal-boolean-color: darkred;
  @literal-symbol-color: steelblue;
  
  .blocks-contract {
    border-radius: 0px;
    opacity: 0.5;
  }

  .blocks-literal {
    .blocks-literal-number {
      color: @literal-number-color;
    }
    .blocks-literal-string {
      height: 100px;
      color: @literal-string-color;
    }
    .blocks-literal-char {
      color: @literal-char-color;
    }
    .blocks-literal-boolean {
      color: @literal-boolean-color;
    }
    .blocks-literal-symbol {
      color: @literal-symbol-color;
    }
    .blocks-lambdaExpression {
      border-radius: @large-border-radius @large-border-radius 0px 0px;
    }
  }

  .blocks-bind,
  .blocks-binop,
  .blocks-check,
  .blocks-checkTest,
  .blocks-constructor,
  .blocks-contract,
  .blocks-data-field,
  .blocks-funApp,
  .blocks-funDef,
  .blocks-ifPipeExpression,
  .blocks-include,
  .blocks-lambdaExp,
  .blocks-let,
  .blocks-loadTable,
  .blocks-reactor,
  .blocks-specialImport,
  .blocks-tuple
  {
    display: inline-flex;
    flex-direction: column;
    align-items: stretch;
    color: black;
    border: @border-width solid black;
    border-radius: 15px;
    margin: 2px;
    background: #eee;
    overflow: hidden;
    white-space: nowrap;
    transition: all 0.5s;

    cursor: grab;
    cursor: -moz-grab;
    cursor: -webkit-grab;

    user-select: none;
  }

  .blocks-ifPipeExpression {
    border-radius: 0px;
    background: white;
    > .blocks-operator {
      justify-content: flex-start;
    }
    > .blocks-cond-table {
      display: table;
      padding: 2px;
      margin: 1px;
      .blocks-cond-drop-row {
        display: table-row;
        .blocks-white-space, .quarantine { min-width: 100%; margin: 0px; height: 5px; transition: height .5s; }
        .blocks-white-space:hover, .quarantine { height: 20px; }
      }
      .blocks-condClause {
        display: table-row-group;
        padding: 3px;
        text-align: center;
        min-width: 200px;
        &:focus {
          outline: @editing-border-color @border-width solid;
        }
        .blocks-cond-row {
          border: 1px solid black;
          text-align: left;
          display: table-row;
          border-top: 1px solid #aaa;
          .blocks-cond-predicate, .blocks-cond-result {
            display: inline-block;
            &.blocks-cond-else {
              color: #777;
            }
          }
          .blocks-cond-predicate {float: left; }
          .blocks-cond-result {float: right; }
        }
        .blocks-cond-row:first-child {
          border-top: 0px;
        }
      }
      .blocks-condClause[aria-expanded=false] {
        display: block;
        height: 20px;
        margin: 5px;
      }
    }
  }

  .blocks-operator .blocks-literal{
    background-color: white;
    .blocks-literal-symbol { color: @literal-symbol-color; }
  }

  /* override default CSS rules */
  .blocks-condClause .blocks-cond-row { text-align: center !important; }

  .blocks-condClause .blocks-cond-result { float: none !important; }
}
